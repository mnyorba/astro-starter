---
import { config } from "../../consts";

// Menu structure (supports any nesting level)
const mainMenu = [
  { label: "Home", href: "/" },
  { label: "Blog", href: "/blog/" },
  {
    label: "Articles",
    children: [
      { label: "Markdown Style Guide(md)", href: "/blog/md-styled/" },
      {
        label: "Demo for Table of Contents",
        href: "/blog/article/example-table-of-contents/",
      },
      {
        label: "Three level",
        children: [
          { label: "Markdown Style Guide(md)", href: "/blog/md-styled/" },
          {
            label: "Demo for Table of Contents",
            href: "/blog/article/example-table-of-contents/",
          },
        ],
      },
    ],
  },
  { label: "Contact", href: "/contact/" },
];

/**
 * Props:
 * - menu: MenuItem[] (menu structure)
 * - maxLevel: number (how many levels to render, default 1)
 */
type MenuItem = {
  label: string;
  href?: string;
  children?: MenuItem[];
};

const { menu = mainMenu, maxLevel = 4 } = Astro.props;
---

{
  // Recursive function to render menu
  function renderMenu(items: MenuItem[] = menu, level = 1) {
    return items.map((item) => {
      if (item.children && item.children.length > 0 && level < maxLevel) {
        return (
          <li>
            <details>
              <summary>{item.label}</summary>
              <ul class="bg-base-100 rounded-t-none p-2">
                {renderMenu(item.children, level + 1)}
              </ul>
            </details>
          </li>
        );
      } else {
        return (
          <li class="w-max">
            <a href={`${config.base}${item.href}`} aria-label={item.label}>
              {item.label}
            </a>
          </li>
        );
      }
    });
  }
}
