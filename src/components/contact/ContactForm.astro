---
import { config } from "../../consts";

interface Props {
  title?: string;
  description?: string;
}

const {
  title = "Contact us",
  description = "Fill out the form and we'll get back to you as soon as possible",
} = Astro.props;

// Get URL parameters to show the result
const sent = Astro.url.searchParams.get("sent") === "true";
const error = Astro.url.searchParams.get("error");
---

<section class="container mx-auto pb-12">
  <div class="mb-8 text-center">
    <h2 class="mt-2 mb-2 text-3xl font-bold">{title}</h2>
    <p class="text-base-content/70">{description}</p>
    <!-- Demo notice -->
    <div role="alert" class="alert alert-info alert-soft">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        class="h-6 w-6 shrink-0 stroke-current"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      <div>
        <h4 class="text-info mt-0">Demo Mode</h4>
        <span
          >This contact form is for demonstration purposes only. Messages are
          not actually sent or stored.</span
        >
      </div>
    </div>
  </div>

  <!-- Success message -->
  {
    sent && (
      <div class="alert alert-success mb-6">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6 shrink-0 stroke-current"
          fill="none"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
          />
        </svg>
        <span>Message sent successfully!</span>
      </div>
    )
  }

  <!-- Error message -->
  {
    error && (
      <div class="alert alert-error mb-6">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6 shrink-0 stroke-current"
          fill="none"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"
          />
        </svg>
        <span>
          {error === "missing" && "Please fill in all required fields."}
          {error === "invalid" && "Please check your email address."}
          {!["missing", "invalid"].includes(error) &&
            "An error occurred. Please try again."}
        </span>
      </div>
    )
  }

  <!-- Demo form with DaisyUI Validator (without JavaScript validation) -->
  <form id="demo-form" class="space-y-6">
    <!-- Personal Information Fieldset -->
    <fieldset class="fieldset mb-0">
      <legend class="fieldset-legend">Personal Information</legend>

      <!-- Name -->
      <div class="form-control">
        <label class="label" for="name">
          <span class="label-text">Full Name *</span>
        </label>
        <input
          type="text"
          id="name"
          name="name"
          autocomplete="name"
          placeholder="Enter your full name"
          class="input input-bordered validator w-full"
          required
          minlength="2"
          maxlength="100"
        />
        <div class="validator-hint my-0">Enter valid full name</div>
      </div>

      <!-- Email -->
      <div class="form-control">
        <label class="label" for="e-mail">
          <span class="label-text">Email Address *</span>
        </label>
        <input
          type="email"
          id="e-mail"
          name="email"
          autocomplete="email"
          placeholder="your.email@example.com"
          class="input input-bordered validator w-full"
          required
        />
        <div class="validator-hint my-0">Enter valid email address</div>
      </div>

      <!-- Phone -->
      <div class="form-control">
        <label class="label" for="phone-number">
          <span class="label-text">Phone Number</span>
        </label>
        <input
          type="tel"
          id="phone-number"
          name="phone"
          autocomplete="tel"
          placeholder="+380 XX XXX XX XX"
          class="input input-bordered validator w-full"
          pattern="[\+]?[0-9\s\-\(\)]+"
          minlength="8"
        />
        <div class="label">
          <span class="label-text-alt">Optional</span>
        </div>
        <div class="validator-hint my-0">Must be minimum 8 digits</div>
      </div>
    </fieldset>

    <!-- Message Details Fieldset -->
    <fieldset class="fieldset mb-0">
      <legend class="fieldset-legend">Message Details</legend>

      <!-- Subject -->
      <div class="form-control">
        <label class="label" for="subject">
          <span class="label-text">Subject</span>
        </label>
        <select
          id="subject"
          name="subject"
          autocomplete="off"
          class="select select-bordered w-full"
        >
          <option value="">Select subject (optional)</option>
          <option value="general">General question</option>
          <option value="support">Technical support</option>
          <option value="business">Business proposal</option>
          <option value="feedback">Feedback</option>
          <option value="other">Other</option>
        </select>
        <div class="label">
          <span class="label-text-alt">Optional</span>
        </div>
      </div>

      <!-- Message -->
      <div class="form-control">
        <label class="label" for="message">
          <span class="label-text">Message *</span>
        </label>
        <textarea
          id="message"
          name="message"
          autocomplete="off"
          placeholder="Enter your message..."
          class="textarea textarea-bordered validator h-32 w-full"
          required
          minlength="10"
          maxlength="1000"></textarea>
        <div class="label">
          <span class="label-text-alt">Min 10 characters, max 1000</span>
        </div>
        <div class="validator-hint my-0">Enter valid message</div>
      </div>
    </fieldset>

    <!-- Privacy & Consent Fieldset -->
    <fieldset class="fieldset mb-0">
      <legend class="fieldset-legend sr-only">Privacy & Consent</legend>

      <!-- Consent -->
      <div class="form-control">
        <label class="label cursor-pointer justify-start gap-3" for="consent">
          <input
            type="checkbox"
            name="consent"
            id="consent"
            class="checkbox checkbox-soft validator"
            required
          />
          <span class="label-text">
            I agree to the <a href={`${config.base}privacy/`} class="link"
              >processing of personal data</a
            > *
          </span>
          <div class="validator-hint">Required</div>
        </label>
      </div>
    </fieldset>

    <!-- Submit button -->
    <div class="form-control pt-4">
      <button type="submit" class="btn btn-soft btn-block" id="submit-btn">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-5 w-5"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
        </svg>
        Send message
      </button>
    </div>
  </form>

  <!-- Demo success message (hidden by default) -->
  <div
    id="demo-success"
    class="alert alert-success mb-6"
    style="display: none;"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-6 w-6 shrink-0 stroke-current"
      fill="none"
      viewBox="0 0 24 24"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
    </svg>
    <span
      >Demo: Message would be sent successfully! (This is just a demonstration)</span
    >
  </div>
</section>

<script>
  // Demo form handling (only for demonstration, not for validation)
  document.addEventListener("DOMContentLoaded", () => {
    const demoForm = document.getElementById("demo-form") as HTMLFormElement;
    const demoSuccess = document.getElementById("demo-success") as HTMLElement;

    if (demoForm && demoSuccess) {
      demoForm.addEventListener("submit", function (e) {
        // Let browser handle validation first
        if (!demoForm.checkValidity()) {
          return; // Browser will show validation messages
        }

        // Prevent actual submission for demo
        e.preventDefault();

        // Show demo success
        demoSuccess.style.display = "flex";
        demoSuccess.scrollIntoView({ behavior: "smooth", block: "center" });

        // Reset form after 3 seconds
        setTimeout(() => {
          demoForm.reset();

          // Hide success message after 0.5 more seconds
          setTimeout(() => {
            demoSuccess.style.display = "none";
          }, 500);
        }, 3000);
      });
    }
  });
</script>
