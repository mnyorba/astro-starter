---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { config, locale } from "../../consts";

import RssFeed from "../../components/common/RssFeed.astro";
import Pagination from "../../components/navigation/Pagination.astro";

import { Image } from "astro:assets";

// Generate all pagination pages
export async function getStaticPaths() {
  const posts = await getCollection("blog", ({ data }) => data.draft !== true);
  const postsPerPage = config.postsPerPage;
  const totalPages = Math.ceil(posts.length / postsPerPage);

  // Pages from 2 to totalPages (because /blog/ is index.astro)
  return Array.from({ length: totalPages - 1 }).map((_, i) => ({
    params: { page: String(i + 2) },
  }));
}

const posts = (
  await getCollection("blog", ({ data }) => data.draft !== true)
).sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

const postsPerPage = config.postsPerPage;
const totalPages = Math.ceil(posts.length / postsPerPage);

// Get page number from params
const { page } = Astro.params;
const currentPage = Number(page);

// Redirect to /blog/, if page 1
if (currentPage === 1) {
  return Astro.redirect(`${config.base}/blog/`);
}

// 404 if the page does not exist
if (currentPage > totalPages || currentPage < 1) {
  throw Astro.redirect("/404");
}

const offset = (currentPage - 1) * postsPerPage;
const paginatedPosts = posts.slice(offset, offset + postsPerPage);

const title = "Blog";
const titleLayout = `Blog â€” Page ${currentPage}`;
const description = "A collection of articles on topics I'm interested in.";
---

<Layout title={titleLayout} description={description}>
  <section class="animate-fade-down text-center">
    <header>
      <h1>{title} <RssFeed /></h1>
      <p class="text-lg font-semibold">{description}</p>
    </header>

    <div class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
      {
        paginatedPosts.map((post, idx) => (
          <article class="animate-fade-up rounded border p-4 shadow !transition hover:shadow-lg">
            <a href={`${config.base}/blog/${post.id}/`}>
              {post.data.image && (
                <Image
                  class="h-48 w-full object-cover"
                  src={`${config.base}${post.data.image.src}`}
                  alt={post.data.image.alt}
                  width={720}
                  height={360}
                  loading={idx <= 2 ? "eager" : "lazy"}
                  sizes="(min-width:1024px) 33vw, (min-width:768px) 50vw, 100vw"
                />
              )}
              <h3 class="mb-2 text-xl font-bold">{post.data.title}</h3>
              <p class="mb-2 text-sm opacity-70">
                <time datetime={post.data.publishDate.toISOString()}>
                  {post.data.publishDate.toLocaleDateString(
                    locale.date.locale,
                    locale.date.options,
                  )}
                </time>
              </p>
              <p class="mb-2">{post.data.description}</p>
            </a>
          </article>
        ))
      }
    </div>

    <!-- Pagination -->
    <Pagination
      totalPages={totalPages}
      currentPage={currentPage}
      baseUrl="/blog"
    />
  </section>
</Layout>
