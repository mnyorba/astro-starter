---
import { getCollection, getEntry, render } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { config } from "../../consts";

export async function getStaticPaths() {
  const posts = await getCollection("blog", ({ data }) => {
    return data.draft !== true;
  });
  return posts.map((post) => {
    return {
      params: { slug: post.id },
      props: { post },
    };
  });
}

const { post } = Astro.props;
// Check if post.data and post.data.author exist
let author = { data: { name: "Unknown Author" } };
if (post?.data?.author) {
  // Get full author data by reference
  const authorEntry = await getEntry(post.data.author);
  if (authorEntry) author = authorEntry;
}

// const author = await getEntry(post.data.author);
const { Content } = await render(post);
---

<Layout
  title={post.data.title}
  description={post.data.description}
  image={post.data.image?.src}
  type="article"
  publishDate={post.data.publishDate}
  updateDate={post.data.updateDate}
  author={author.data}
>
  <article>
    <h1>{post.data.title}</h1>
    <img
      src={`${config.base}${post.data.image?.src}`}
      alt={`${post.data.image?.alt} || ${post.data.title}`}
      class="w-lg"
    />
    <p>
      By {author.data.name} on {post.data.publishDate.toLocaleDateString()}
    </p>
    {
      post.data.updateDate &&
        post.data.updateDate?.valueOf() !== post.data.publishDate.valueOf() && (
          <p>Last updated on {post.data.updateDate?.toLocaleDateString()}</p>
        )
    }
    {
      post.data.category && post.data.category.length > 0 && (
        <p>Category: {post.data.category.join(", ")}</p>
      )
    }
    {
      post.data.tag && post.data.tag.length > 0 && (
        <p>Tags: {post.data.tag.join(", ")}</p>
      )
    }
    <hr />
    <Content />
  </article>
</Layout>
